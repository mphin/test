name: Plugin Workflow

on:
  push:
    branches:
      - main

jobs:
  Plugin_update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Update Plugin
      run: |
        conf_folder="conf"
        script_folder="script"
        plugin_folder="plugin"
        mkdir -p "$conf_folder" "$script_folder" "$plugin_folder"
        
        current_year=$(date +'%Y')
        previous_year_1=$((current_year - 1))
        previous_year_2=$((current_year - 2))
        
        for conf_file in $conf_folder/*.conf; do
            if [ -f "$conf_file" ]; then
                download_url=$(grep '^#!url =' "$conf_file" | sed 's/^#!url = //')
                download_file="$script_folder/$(basename "$conf_file" .conf).js"
                wget -O "$download_file" "$download_url"

                name=$(grep '^#!name =' "$conf_file" | sed 's/^#!name = //')
                desc=$(grep '^#!desc =' "$conf_file" | sed 's/^#!desc = //')
                openUrl=$(grep '^#!openUrl =' "$conf_file" | sed 's/^#!openUrl = //')
                author=$(grep '^#!author =' "$conf_file" | sed 's/^#!author = //')
                homepage=$(grep '^#!homepage =' "$conf_file" | sed 's/^#!homepage = //')
                icon=$(grep '^#!icon =' "$conf_file" | sed 's/^#!icon = //')
                date=$(grep -oE "$current_year[-/.年][[:digit:]]{1,2}[-/.年][[:digit:]]{1,2}|$previous_year_1[-/.年][[:digit:]]{1,2}[-/.年][[:digit:]]{1,2}|$previous_year_2[-/.年][[:digit:]]{1,2}[-/.年][[:digit:]]{1,2}" "$download_file" || grep '^#!date =' "$conf_file" | sed 's/^#!date = //')

                plugin_file="$plugin_folder/$(basename "$conf_file" .conf).plugin"
                echo "#!name = $name" > "$plugin_file"
                echo "#!desc = $desc" >> "$plugin_file"
                echo "#!openUrl = $openUrl" >> "$plugin_file"
                echo "#!author = $author" >> "$plugin_file"
                echo "#!homepage = $homepage" >> "$plugin_file"
                echo "#!icon = $icon" >> "$plugin_file"
                echo "#!date = $date" >> "$plugin_file"

                mitm=$(grep '^\hostname =' "$conf_file" || grep -i '^\hostname =' "$download_file")
                script=$(awk '/\[Script\]/{flag=1; next} /^\[/{flag=0} flag' "$conf_file")
                [ -z "$script" ] && script=$(awk '/\[rewrite_local\]/{flag=1; next} /^\[/{flag=0} flag' "$download_file")

                echo -e "\n[MITM]\n$mitm" >> "$plugin_file"
                echo -e "\n[Script]\n$script" >> "$plugin_file"
                
                # 查找并替换
                sed -i 's/url script-response-body/script-path =/' "$plugin_file"
                sed -i '/script-path =/ s/^/http-response /' "$plugin_file"
                sed -i '/script-path =/ s/$/, requires-body = true, tag =/' "$plugin_file"
                # 在行上查找并添加
                line_number=$(grep -n 'script-path =' "$plugin_file" | cut -d: -f1)
                if [ $line_number -gt 1 ]; then
                  # 如果存在'#'，读取值并添加到行尾
                  comment_value=$(sed -n "$((line_number - 1)) s/# *//p" "$plugin_file" | tr -d '[:space:]')
                  sed -i "${line_number}s/$/ $comment_value/" "$plugin_file"
                else
                  # 如果不存在'#'，查找'#!name ='读取值并添加到行尾
                  name_value=$(grep '#!name =' "$conf_file" | awk -F' = ' '{print $2}' | tr -d '[:space:]')
                  sed -i "${line_number}s/$/ $name_value/" "$plugin_file"
                fi
            fi
        done

    - name: Commit and push
      run: |
        git config --global user.email "mphin@qq.com" && git config --global user.name "Bot"
        git add . && git commit -m "自动更新$(date +'%Y-%m-%d %H:%M')" || exit 0
        git push

    - name: Cleanup Workflow
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 2
